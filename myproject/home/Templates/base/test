<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Modal Comment Với Đính Kèm Ảnh</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            display: flex;
            align-items: center;
            justify-content: center;
            padding: 20px;
        }

        .engagement-btn {
            background: rgba(255, 255, 255, 0.2);
            border: 2px solid rgba(255, 255, 255, 0.3);
            color: white;
            padding: 12px 24px;
            border-radius: 50px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            display: flex;
            align-items: center;
            gap: 8px;
            backdrop-filter: blur(10px);
            transition: all 0.3s ease;
        }

        .engagement-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            border-color: rgba(255, 255, 255, 0.5);
            transform: translateY(-2px);
            box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
        }

        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.7);
            backdrop-filter: blur(5px);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 1000;
            opacity: 0;
            transition: opacity 0.3s ease;
        }

        .modal-overlay.active {
            display: flex;
            opacity: 1;
        }

        .modal {
            background: white;
            border-radius: 20px;
            width: 100%;
            max-width: 600px;
            max-height: 80vh;
            overflow: hidden;
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.3);
            transform: scale(0.7);
            transition: transform 0.3s ease;
            position: relative;
        }

        .modal-overlay.active .modal {
            transform: scale(1);
        }

        .modal-header {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            padding: 20px 25px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .modal-title {
            font-size: 20px;
            font-weight: 700;
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .close-btn {
            background: rgba(255, 255, 255, 0.2);
            border: none;
            color: white;
            width: 35px;
            height: 35px;
            border-radius: 50%;
            cursor: pointer;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 18px;
            transition: all 0.2s ease;
        }

        .close-btn:hover {
            background: rgba(255, 255, 255, 0.3);
            transform: rotate(90deg);
        }

        .modal-body {
            padding: 0;
            max-height: 400px;
            overflow-y: auto;
        }

        .comment-form {
            padding: 25px;
            border-bottom: 1px solid #eee;
            background: #f8f9fa;
        }

        .user-avatar {
            width: 45px;
            height: 45px;
            border-radius: 50%;
            background: linear-gradient(135deg, #667eea, #764ba2);
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 600;
            font-size: 18px;
        }

        .comment-input-wrapper {
            display: flex;
            gap: 15px;
            align-items: flex-start;
        }

        .comment-input-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .comment-input {
            width: 100%;
            min-height: 80px;
            padding: 15px;
            border: 2px solid #e9ecef;
            border-radius: 15px;
            resize: vertical;
            font-family: inherit;
            font-size: 14px;
            transition: border-color 0.3s ease;
            background: white;
        }

        .comment-input:focus {
            outline: none;
            border-color: #667eea;
        }

        .attachment-section {
            display: flex;
            flex-direction: column;
            gap: 10px;
        }

        .attachment-controls {
            display: flex;
            gap: 10px;
            align-items: center;
        }

        .file-input {
            display: none;
        }

        .attach-btn {
            background: #f8f9fa;
            border: 2px solid #e9ecef;
            color: #667eea;
            padding: 8px 15px;
            border-radius: 20px;
            cursor: pointer;
            font-size: 14px;
            font-weight: 500;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: all 0.3s ease;
        }

        .attach-btn:hover {
            background: #667eea;
            color: white;
            border-color: #667eea;
        }

        .submit-btn {
            background: linear-gradient(135deg, #667eea, #764ba2);
            color: white;
            border: none;
            padding: 12px 25px;
            border-radius: 25px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }

        .submit-btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(102, 126, 234, 0.4);
        }

        .preview-container {
            display: flex;
            flex-wrap: wrap;
            gap: 10px;
        }

        .image-preview {
            position: relative;
            width: 80px;
            height: 80px;
            border-radius: 10px;
            overflow: hidden;
            border: 2px solid #e9ecef;
        }

        .image-preview img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .remove-image {
            position: absolute;
            top: -5px;
            right: -5px;
            background: #ff4757;
            color: white;
            border: none;
            width: 20px;
            height: 20px;
            border-radius: 50%;
            cursor: pointer;
            font-size: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            transition: all 0.2s ease;
        }

        .remove-image:hover {
            background: #ff3742;
            transform: scale(1.1);
        }

        .comments-list {
            padding: 0;
        }

        .comment-item {
            padding: 20px 25px;
            border-bottom: 1px solid #f0f0f0;
            transition: background-color 0.2s ease;
        }

        .comment-item:hover {
            background: #f8f9fa;
        }

        .comment-header {
            display: flex;
            align-items: center;
            gap: 12px;
            margin-bottom: 10px;
        }

        .comment-author {
            font-weight: 600;
            color: #333;
        }

        .comment-time {
            color: #888;
            font-size: 12px;
        }

        .comment-content {
            color: #555;
            line-height: 1.6;
            margin-bottom: 10px;
        }

        .comment-images {
            display: flex;
            gap: 8px;
            margin-bottom: 12px;
        }

        .comment-image {
            width: 100px;
            height: 100px;
            border-radius: 8px;
            overflow: hidden;
            cursor: pointer;
            transition: transform 0.2s ease;
        }

        .comment-image:hover {
            transform: scale(1.05);
        }

        .comment-image img {
            width: 100%;
            height: 100%;
            object-fit: cover;
        }

        .comment-actions {
            margin-top: 12px;
            display: flex;
            gap: 15px;
        }

        .action-btn {
            background: none;
            border: none;
            color: #888;
            cursor: pointer;
            font-size: 12px;
            display: flex;
            align-items: center;
            gap: 5px;
            padding: 5px 10px;
            border-radius: 15px;
            transition: all 0.2s ease;
        }

        .action-btn:hover {
            background: #f0f0f0;
            color: #667eea;
        }

        .empty-state {
            text-align: center;
            padding: 60px 25px;
            color: #888;
        }

        .empty-state-icon {
            font-size: 48px;
            margin-bottom: 15px;
            opacity: 0.5;
        }

        /* Image viewer modal */
        .image-viewer-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.9);
            display: none;
            align-items: center;
            justify-content: center;
            z-index: 2000;
        }

        .image-viewer-overlay.active {
            display: flex;
        }

        .image-viewer {
            max-width: 90%;
            max-height: 90%;
        }

        .image-viewer img {
            max-width: 100%;
            max-height: 100%;
            border-radius: 10px;
        }

        /* Custom scrollbar */
        .modal-body::-webkit-scrollbar {
            width: 6px;
        }

        .modal-body::-webkit-scrollbar-track {
            background: #f1f1f1;
        }

        .modal-body::-webkit-scrollbar-thumb {
            background: #c1c1c1;
            border-radius: 3px;
        }

        .modal-body::-webkit-scrollbar-thumb:hover {
            background: #a8a8a8;
        }

        @media (max-width: 640px) {
            .modal {
                width: 95%;
                max-height: 90vh;
            }
            
            .comment-form {
                padding: 20px;
            }
            
            .comment-item {
                padding: 15px 20px;
            }

            .comment-input-wrapper {
                flex-direction: column;
                gap: 10px;
            }

            .image-preview {
                width: 60px;
                height: 60px;
            }
        }
    </style>
</head>
<body>
    <button class="engagement-btn" onclick="openModal()">
        💬 Bình luận
    </button>

    <div class="modal-overlay" id="modalOverlay" onclick="closeModalOnOverlay(event)">
        <div class="modal" onclick="event.stopPropagation()">
            <div class="modal-header">
                <div class="modal-title">
                    💬 Bình luận
                </div>
                <button class="close-btn" onclick="closeModal()">×</button>
            </div>
            
            <div class="modal-body">
                <div class="comment-form">
                    <div class="comment-input-wrapper">
                        <div class="user-avatar">A</div>
                        <div class="comment-input-container">
                            <textarea 
                                class="comment-input" 
                                placeholder="Viết bình luận của bạn..."
                                id="commentInput"
                            ></textarea>
                            
                            <div class="attachment-section">
                                <div class="preview-container" id="previewContainer"></div>
                                
                                <div class="attachment-controls">
                                    <input type="file" id="fileInput" class="file-input" multiple accept="image/*" onchange="handleFileSelect(event)">
                                    <label for="fileInput" class="attach-btn">
                                        📎 Đính kèm ảnh
                                    </label>
                                    <button class="submit-btn" onclick="addComment()">Đăng bình luận</button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="comments-list" id="commentsList">
                    <div class="comment-item">
                        <div class="comment-header">
                            <div class="user-avatar">M</div>
                            <div class="comment-author">Minh Nguyễn</div>
                            <div class="comment-time">2 giờ trước</div>
                        </div>
                        <div class="comment-content">
                            Bài viết rất hay và bổ ích! Cảm ơn bạn đã chia sẻ những thông tin hữu ích này.
                        </div>
                        <div class="comment-images">
                            <div class="comment-image" onclick="viewImage('https://picsum.photos/400/400?random=1')">
                                <img src="https://picsum.photos/100/100?random=1" alt="Ảnh bình luận">
                            </div>
                            <div class="comment-image" onclick="viewImage('https://picsum.photos/400/400?random=2')">
                                <img src="https://picsum.photos/100/100?random=2" alt="Ảnh bình luận">
                            </div>
                        </div>
                        <div class="comment-actions">
                            <button class="action-btn">👍 Thích (12)</button>
                            <button class="action-btn">💬 Trả lời</button>
                        </div>
                    </div>
                    
                    <div class="comment-item">
                        <div class="comment-header">
                            <div class="user-avatar">L</div>
                            <div class="comment-author">Linh Trần</div>
                            <div class="comment-time">4 giờ trước</div>
                        </div>
                        <div class="comment-content">
                            Mình có thêm một ý kiến khác về vấn đề này. Theo kinh nghiệm của mình thì...
                        </div>
                        <div class="comment-actions">
                            <button class="action-btn">👍 Thích (8)</button>
                            <button class="action-btn">💬 Trả lời</button>
                        </div>
                    </div>
                    
                    <div class="comment-item">
                        <div class="comment-header">
                            <div class="user-avatar">H</div>
                            <div class="comment-author">Hùng Lê</div>
                            <div class="comment-time">1 ngày trước</div>
                        </div>
                        <div class="comment-content">
                            Tuyệt vời! Đây chính là những gì mình đang tìm kiếm. 👏
                        </div>
                        <div class="comment-images">
                            <div class="comment-image" onclick="viewImage('https://picsum.photos/400/400?random=3')">
                                <img src="https://picsum.photos/100/100?random=3" alt="Ảnh bình luận">
                            </div>
                        </div>
                        <div class="comment-actions">
                            <button class="action-btn">👍 Thích (5)</button>
                            <button class="action-btn">💬 Trả lời</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <!-- Image viewer modal -->
    <div class="image-viewer-overlay" id="imageViewer" onclick="closeImageViewer()">
        <div class="image-viewer">
            <img id="viewerImage" src="" alt="Xem ảnh">
        </div>
    </div>

    <script>
        let selectedImages = [];

        function openModal() {
            const overlay = document.getElementById('modalOverlay');
            overlay.classList.add('active');
            document.body.style.overflow = 'hidden';
        }

        function closeModal() {
            const overlay = document.getElementById('modalOverlay');
            overlay.classList.remove('active');
            document.body.style.overflow = 'auto';
        }

        function closeModalOnOverlay(event) {
            if (event.target === event.currentTarget) {
                closeModal();
            }
        }

        function handleFileSelect(event) {
            const files = Array.from(event.target.files);
            
            files.forEach(file => {
                if (file.type.startsWith('image/')) {
                    const reader = new FileReader();
                    reader.onload = function(e) {
                        selectedImages.push({
                            file: file,
                            url: e.target.result
                        });
                        displayImagePreview();
                    };
                    reader.readAsDataURL(file);
                }
            });
            
            // Reset input
            event.target.value = '';
        }

        function displayImagePreview() {
            const container = document.getElementById('previewContainer');
            container.innerHTML = '';
            
            selectedImages.forEach((image, index) => {
                const preview = document.createElement('div');
                preview.className = 'image-preview';
                preview.innerHTML = `
                    <img src="${image.url}" alt="Preview">
                    <button class="remove-image" onclick="removeImage(${index})">×</button>
                `;
                container.appendChild(preview);
            });
        }

        function removeImage(index) {
            selectedImages.splice(index, 1);
            displayImagePreview();
        }

        function addComment() {
            const input = document.getElementById('commentInput');
            const content = input.value.trim();
            
            if (content === '' && selectedImages.length === 0) {
                alert('Vui lòng nhập nội dung hoặc đính kèm ảnh!');
                return;
            }

            const commentsList = document.getElementById('commentsList');
            const newComment = document.createElement('div');
            newComment.className = 'comment-item';
            
            let imagesHtml = '';
            if (selectedImages.length > 0) {
                imagesHtml = '<div class="comment-images">';
                selectedImages.forEach(image => {
                    imagesHtml += `
                        <div class="comment-image" onclick="viewImage('${image.url}')">
                            <img src="${image.url}" alt="Ảnh bình luận">
                        </div>
                    `;
                });
                imagesHtml += '</div>';
            }
            
            newComment.innerHTML = `
                <div class="comment-header">
                    <div class="user-avatar">A</div>
                    <div class="comment-author">Bạn</div>
                    <div class="comment-time">Vừa xong</div>
                </div>
                <div class="comment-content">
                    ${content}
                </div>
                ${imagesHtml}
                <div class="comment-actions">
                    <button class="action-btn">👍 Thích (0)</button>
                    <button class="action-btn">💬 Trả lời</button>
                </div>
            `;
            
            commentsList.insertBefore(newComment, commentsList.firstChild);
            input.value = '';
            selectedImages = [];
            displayImagePreview();
            
            // Add animation to new comment
            newComment.style.opacity = '0';
            newComment.style.transform = 'translateY(20px)';
            setTimeout(() => {
                newComment.style.transition = 'all 0.3s ease';
                newComment.style.opacity = '1';
                newComment.style.transform = 'translateY(0)';
            }, 10);
        }

        function viewImage(src) {
            const viewer = document.getElementById('imageViewer');
            const img = document.getElementById('viewerImage');
            img.src = src;
            viewer.classList.add('active');
        }

        function closeImageViewer() {
            const viewer = document.getElementById('imageViewer');
            viewer.classList.remove('active');
        }

        // Close modal with Escape key
        document.addEventListener('keydown', function(event) {
            if (event.key === 'Escape') {
                const viewer = document.getElementById('imageViewer');
                if (viewer.classList.contains('active')) {
                    closeImageViewer();
                } else {
                    closeModal();
                }
            }
        });

        // Auto-resize textarea
        document.getElementById('commentInput').addEventListener('input', function() {
            this.style.height = 'auto';
            this.style.height = Math.min(this.scrollHeight, 200) + 'px';
        });
    </script>
</body>
</html>